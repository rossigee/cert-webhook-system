name: Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-scanning:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.25"

    - name: Run govulncheck
      uses: golang/govulncheck-action@v1
      with:
        go-version-input: "1.25"
        go-package: "./..."
        cache: true

    - name: Run Nancy vulnerability scanner
      run: |
        go list -json -deps ./... | docker run --rm -i sonatypecommunity/nancy:latest sleuth

  code-scanning:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality

    - name: Set up Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v5
      with:
        go-version: "1.25"

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  secrets-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Run Trufflehog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: master
        head: HEAD
        extra_args: --debug --only-verified

  container-scanning:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image for scanning
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: cert-webhook-system:security-scan
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'cert-webhook-system:security-scan'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Grype vulnerability scanner
      uses: anchore/scan-action@v4
      id: grype-scan
      with:
        image: "cert-webhook-system:security-scan"
        fail-build-on: "high"
        severity-cutoff: "medium"

    - name: Upload Grype scan results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.grype-scan.outputs.sarif }}

  security-scorecard:
    name: OSSF Scorecard
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    permissions:
      security-events: write
      id-token: write
      actions: read
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Run analysis
      uses: ossf/scorecard-action@v2.4.0
      with:
        results_file: results.sarif
        results_format: sarif
        publish_results: true

    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif